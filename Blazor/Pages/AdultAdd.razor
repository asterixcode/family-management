@page "/AdultAdd"
@using Blazor.Services
@using Blazor.Models

@inject IDataApiService DataApiService
@inject NavigationManager NavigationManager

<h3>Add Adult</h3>

<EditForm Model="@_newAdult" OnValidSubmit="@AddNewAdult">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        First name:<br/>
        <InputText @bind-Value="_newAdult.FirstName"/>
    </div>
    <div class="form-group">
        Last name:<br/>
        <InputText @bind-Value="_newAdult.LastName"/>
    </div>
    <div class="form-group">
        Hair color:<br/>
        <InputText @bind-Value="_newAdult.HairColor"/>
    </div>
    <div class="form-group">
        Eye color:<br/>
        <InputText @bind-Value="_newAdult.EyeColor"/>
    </div>
    <div class="form-group">
        Age:<br/>
        <InputNumber @bind-Value="_newAdult.Age"/>
    </div>
    <div class="form-group">
        Weight (kg):<br/>
        <InputNumber @bind-Value="_newAdult.Weight"/>
    </div>
    <div class="form-group">
        Height (cm):<br/>
        <InputNumber @bind-Value="_newAdult.Height"/>
    </div>
    <div class="form-group">
        Sex:<br/>
        <InputSelect @bind-Value="_newAdult.Sex">
            <option value="">Select sex</option>
            <option value="F">Female</option>
            <option value="M">Male</option>
        </InputSelect>
    </div>
    <div class="form-group">
        Job Title:<br/>
        <InputSelect @bind-Value="_selectedJob">
            <option value="">Select job</option>
            @foreach (var job in _allJobs)
            {
                string jobValue = job.JobTitle;
                <option value="@jobValue">@job.JobTitle</option>
            }
        </InputSelect>
    </div>


    <p class="actions">
        <button class="btn btn-outline-dark" type="submit">Create</button>
    </p>
</EditForm>



@code {

    private Adult _newAdult = new Adult();
    private IList<Job> _allJobs = new List<Job>();
    private string _selectedJob;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _allJobs = await DataApiService.GetAllJobsAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        
    }

    private void AddNewAdult()
    {
        AddSelectedJob();
        DataApiService.AddAdultAsync(_newAdult);
        NavigationManager.NavigateTo("/AdultAll");
    }

    private void AddSelectedJob()
    {
        var temp = new Job();
        
        foreach (var job in _allJobs)
        {
            if (job.JobTitle.Equals(_selectedJob))
            {
                temp = job;
            }
        }
        _newAdult.JobTitle = temp;
    }
    
}