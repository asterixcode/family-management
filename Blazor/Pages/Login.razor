@page "/Login"
@using Blazor.Data

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>

    <NotAuthorized>

        <div class="form-group">
            <label>Username</label>
            <input type="text" placeholder="username" @bind-value="username"/>
        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" placeholder="password" @bind-value="password"/>
        </div>
        <div style="color:red">@errorMessage</div>
        <button @onclick="PerformLogin" class="btn-dark">LOGIN</button>

    </NotAuthorized>

    <Authorized>
        <h5> Hello @context.User.Identity.Name! </h5>
        <button @onclick="PerformLogout" class="btn-dark">
            LOGOUT
        </button>
    </Authorized>

</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}