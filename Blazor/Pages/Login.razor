@page "/Login"
@using Blazor.Auth

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@namespace Blazor.Pages

<AuthorizeView>
    <NotAuthorized>
        <h3>Login</h3>
        <br/>
        
        <div class="form-group">
            <label>Username</label>
            <input type="text" placeholder="username" @bind-value="username"/>
        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" placeholder="password" @bind-value="password"/>
        </div>
        <button @onclick="PerformLoginAsync" class="btn-dark">LOGIN</button>
        <div style="color:red">@errorMessage</div>
    </NotAuthorized>
    
    <Authorized>
        <h5> Hello @context.User.Identity.Name! </h5>
        <button @onclick="PerformLogoutAsync" class="btn-dark">
            LOGOUT
        </button>
    </Authorized>
</AuthorizeView>



@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLoginAsync()
    {
        errorMessage = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLoginAsync(username, password);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogoutAsync()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).LogoutAsync();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}